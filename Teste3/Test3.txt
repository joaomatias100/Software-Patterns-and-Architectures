1-
Visto que era pretendido uma utilização do Padrão Strategy, começou-se por definir a Strategy do problema através de uma interface. Esta Strategy, chamada de Plotting, era a responsável por dar plot ao gráfico pretendido. Como era uma interface, não era ela que iria implementar esse método mas sim cada Strategy Concreta (Columns, Pizza, Lines e Web: todas classes concretas que implementam, à sua maneira, a Strategy definida). Cada strategy concreta, como já referido, apenas irá fazer um print com referência ao que cada uma faz, como por exemplo: a Strategy Pizza irá dar print a "Plotting in Pizza shape a lot of information in pizza", em que "a lot of information in pizza" é a informaação passada no main, a nossa variável data. No entanto, é necessário também um mediador, ou Context, para selecionar qual a estratégia a ser utilizada, daí ter sido criada uma classe Selector que, tal como o nome o refere, irá permitir ao utilizador definir a estratégia e enviar a informação para a classe de acordo com a estratégia selecionada, para fazer print. Por último, definiu-se um código de teste no main para se verificar o comportamento concreto da aplicação, e criaram-se diversos selectors com cada estratégia definida como argumento em cada um deles. 

2-
O Padrão a ser utilizado será o Memento. Requisitos como aceder a históricos de sessões anteriores, apagar sessões, etc.. fazem com que se tenha de desenvolver uma aplicação com capacidade de registar estados, guardar, aceder e remover estados antigos, o que é a principal característica do Memento. A implementação seria a seguinte:
-criação de uma classe Information, a nossa Originator, que irá conter atributos como nome do atleta e nota de desempenho. A partir daí, irão ser definidas funções dentro dessa classe que irão verificar o estado de saúde (dependente das notas de desempenho) e outros comportamentos que possam ser requisitados. No entanto, também terá de haver um mecanismo para assegurar que se possa fazer os registos de forma diária e, seguidamento, guardados, então define-se uma classe Memento dentro da Information que será responsável por criar snapshots da informação de cada dia. Desta forma, é permitido definir um método save que irá retornar um objeto do tipo Memento de determinado dia.
-criação de uma classe History, o nosso Caretaker, que irá definir e guardar uma Stack de Mementos e pode, quando ordenado, restaurar determinado Memento, ou seja, restaurar um estado de qualquer tipo de informação (neste caso, o desempenho e estado de saúde de um jogador em determinado dia). Também poderá apagar registos recentes (undo), mas apenas se esse método seja definido aqui.
-criação do Main e inicialização de alguns objetos do tipo Information e teste de funcionalidades: começa-se por se popular o sistema com alguns dados e testar as funcionalidades de Show() e Undo() vindas do Caretaker.
